% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{.deserialize_json}
\alias{.deserialize_json}
\title{Deserialize JSON into R Objects}
\usage{
.deserialize_json(
  json,
  json_pointer = "",
  empty_array = NULL,
  empty_object = NULL,
  simplify_to = 0L,
  type_policy = 0L,
  int64_r_type = 0L
)
}
\arguments{
\item{json}{\code{character(1L)}}

\item{json_pointer}{\code{character(1L)}, default: \code{""}}

\item{empty_array}{default: \code{NULL}. Any R object to return for empty JSON arrays.}

\item{empty_object}{default: \code{NULL}. Any R object to return for empty JSON objects.}

\item{simplify_to}{default: \code{0}. Maximum simplification level.
0=dataframe, 1=matrix, 2=vector, 3=list}

\item{type_policy}{default: \code{0}. Level of type strictness.
0=anything goes, 1=merge integers/doubles, 2=strict}

\item{int64_r_type}{default: \code{0} How to return big integers to R.
0=double, 1=string, 2=bit64::integer64}
}
\description{
Deserialize JSON into R Objects
}
\keyword{internal}
