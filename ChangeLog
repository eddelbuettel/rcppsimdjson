2020-07-16  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll minor version

2020-07-16  Daniel Lemire  <lemire@gmail.com>

        * README.md: Ensure example has RcppSimdJson loaded
        * demo/simpleBenchmark.R: Check for required packages
        * demo/simpleParseBenchmark.R: Idem

2020-07-13  Dirk Eddelbuettel  <edd@debian.org>

        * demo/simpleParseBenchmark.R: Add new simple parsing benchmark
        * docs/rcppsimdjson_parse_benchmark.png: Benchmark results figure
        * README.md: Show new benchmark table and chart

2020-07-09  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Date, Version): Roll minor version and date

        * README.md: Small edits

2020-07-08  Brendan Knapp  <brendan.g.knapp@gmail.com>

        * R/fparse: add raw/list-of-raw support to fparse (plus tests and docs)
        * R/inst/tinytest/test_issues: Idem
        * src/deserialize.cpp: Idem
        * src/RcppExports.cpp: Idem
        * man/fparse.Rd: Idem

2020-07-06  Brendan Knapp  <brendan.g.knapp@gmail.com>

        * R/fload: prevent deleting non-temp files (plus tests) (post-CRAN-release)
        * R/inst/tinytest/test_issues: Idem

2020-07-07  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Release 0.1.0

2020-07-05  Brendan Knapp  <brendan.g.knapp@gmail.com>

        * DESCRIPTION (Imports): add utils to Imports
        * NAMESPACE: added importFrom(utils, download.file)

        * R/fparse: New functions fparse and fload (plus tests and docs)
        * R/fload: Idem
        * man/fparse.Rd: Idem
        * inst/tinytest/test_fparse_fload.R: Idem

        * src/deserialize.cpp: add options for errors and single JSON nulls,
        guard gcc-7 from disabling simdjson exceptions, expand tests
        * inst/include/RcppSimdJson/common.hpp: Idem
        * inst/include/RcppSimdJson/deserialize.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/dataframe.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/matrix.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/scalar.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/simplify.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/vector.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/Type_Doctor.hpp: Idem

        * .travis.yml: Add (now passing) g++-7 to Travis Matrix

2020-07-04  Dirk Eddelbuettel  <edd@debian.org>

        * .travis.yml: Rewritten as matrix over g++ 8, 9, and 10

2020-07-02  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll version and date

        * inst/include/simdjson.h: Upgrade to upstream version 0.4.6
        * inst/include/simdjson.cpp: Ditto

2020-06-27  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll version and date

        * inst/include/simdjson.h: Upgrade to upstream version 0.4.1
        * inst/include/simdjson.cpp: Ditto

        * DESCRIPTION (OS_type): Removed -- package now builds on Windows

2020-06-25  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Release 0.0.6
        * DESCRIPTION (Description): Changed wording a little

2020-06-24  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll version and date

        * inst/include/simdjson.h: Upgrade to upstream version 0.4.0
        * inst/include/simdjson.cpp: Ditto

        * src/Makevars.win: Stub, windows build not yet supported

2020-06-18  Dirk Eddelbuettel  <edd@debian.org>

        * .travis.yml: Switch to 'bionic', derive package name and version

2020-06-18  Brendan Knapp  <brendan.g.knapp@gmail.com>

        * inst/include/RcppSimdJson.hpp: New functions .deserialize_json and
        .load_json (plus utilities .exceptions_enabled and .check_int64)
        * inst/include/RcppSimdJson/common.hpp: Idem
        * inst/include/RcppSimdJson/deserialize.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/dataframe.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/matrix.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/scalar.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/simplify.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/vector.hpp: Idem
        * inst/include/RcppSimdJson/deserialize/Type_Doctor.hpp: Idem
        * inst/tinytest/test_deserialization.R: Idem
        * inst/tinytest/test_load_json.R: Idem
        * inst/tinytest/test_vectorized_ops.R: Idem
        * src/deserialize.cpp: Idem
        * src/RcppExport.cpp: Idem
        * R/RcppExport.R: Idem
        * man/dot-serialize_json.Rd: Idem
        [ plus mulitple earlier dates ]

2020-05-26  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Author): Add Brendan
        * DESCRIPTION (Version, Date): Roll version and date

2020-05-26  Brendan Knapp  <brendan.g.knapp@gmail.com>

        * DESCRIPTION: Added Suggests: bit64

        * inst/include/RcppSimdJson.hpp: Created new C++ API entry-point
        * inst/include/RcppSimdJson/utils.hpp: Added integer-handler utilities

        * src/rcppsimdjson_utils_check.cpp: Added testable integer-handler checks
        * inst/tinytest/test_int64.R Added test for integer-handlers

2020-05-22  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Release 0.0.5

2020-05-21  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll version and date

        * src/simdjson_example.cpp: Add minimal documentation
        * man/parseExample.Rd: Idem

2020-05-20  Brendan Knapp  <brendan.g.knapp@gmail.com>

        * inst/include/simdjson.h: Synced with upstream
        * inst/include/simdjson.cpp: Synced with upstream

        * src/simdjson_example.cpp (parseExample): Added simdjson namespace to
        dom::array so that it still compiles following simdjson sync

2020-04-03  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Release 0.0.4

        * src/simdjson_example.cpp (validateJSON): Updated

        * src/simdjson_example.cpp (parseExample): Added simple example (but
        only after shipping 0.0.4 to CRAN)

2020-04-02  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/simdjson.h: Upgraded to simdjson 0.3 and 0.3.1
        * inst/include/simdjson.cpp: Idem

        * inst/include/simdjson.h: Removed four ';', also sent upstream

2020-03-25  Dirk Eddelbuettel  <edd@debian.org>

        * README.md: Add a last-commit badge

2020-03-03  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Release 0.0.3

2020-03-02  Dirk Eddelbuettel  <edd@debian.org>

        * R/validateJSON.R: Run example only if architecture is supported
        * man/validateJSON.Rd: Idem

        * inst/tinytest/test_validation.R: Run testfile only if architecture
        is supported

        * cleanup: Add helper script

2020-02-25  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll minor version and date

        * configure: Add simple check for C++17 based on the R configuration
        * src/Makevars.in: Configure C++17 if seen with R

        * src/simdjson_example.cpp (unsupportedArchitecture): Check for CPU
        architectures by relying in simdjson active_implemenation->name()

        * R/init.R (.onAttach): Flag unsupported architectures on startup

2020-02-22  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/simdjson.cpp: Synced with upstream
        * inst/include/simdjson.h: Synced with upstream

2020-02-21  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Release 0.0.2

2020-02-20  Dirk Eddelbuettel  <edd@debian.org>

        * src/simdjson_example.cpp (validateJSON): Protect function body by
        #define for sufficient C++17 standard
        (cppVersion): New (internal) helper function returning C++ standard

        * R/init.R (.onAttach): Flag older compiler on startup

        * R/validateJSON.R (validateJSON): Wrap call in Sys.glob() to expand ~

2020-02-13  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll minor version and date

        * inst/include/simdjson.cpp: Synced with upstream
        * inst/include/simdjson.h: Idem

        * inst/NEWS.Rd: Added

2020-02-12  Dirk Eddelbuettel  <edd@debian.org>

        * README.md: Correct two badge URLs now that the package is on CRAN,
        mention performance impact of turning computed GOTOs off

2020-01-27  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version, Date): Roll minor version and date

        * src/Makevars: Use #define to deactivate compiled GOTO

        * inst/include/simdjson.cpp: Synced with upstream
        * inst/include/simdjson.h: Idem

2020-01-25  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/simdjson.h: Comment-out #define for
        SIMDJSON_USE_COMPUTED_GOTO to suppress one -pedantic message

        * tests/tinytest.R: Added tinytest support
        * inst/tinytest/test_validation.R: Ditt
        * DESCRIPTION: Added Suggests: for tinytest

        * README.md: Reworded contributions a little (GH issue #2)
        * DESCRIPTION: Ditto, also rolled Date

2020-01-20  Dirk Eddelbuettel  <edd@debian.org>

        * demo/simpleBenchmark.R: Add benchmark comparing JSON validation
        * docs/rcppsimdjson_benchmark.png: Autoplot of benchmark results
        * README.md: Added benchmark result and plot, small edits

        * .travis.yml: Added to support continuous integration

2020-01-19  Dirk Eddelbuettel  <edd@debian.org>

        * inst/include/simdjson.cpp: Replace std::cerr and fprintf(stderr,
        ...)  with Rcpp::Rcerr and REprintf(...) to appease R CMD check

2020-01-18  Dirk Eddelbuettel  <edd@debian.org>

        * DESCRIPTION (Version,Date): Initial and very raw version 0.0.1
        (SystemRequirements): Declare C++17
        (OS_type): Restrict to unix (due to older C++ compiler on Windows)

        * README.md: Added

        * .Rbuildignore: Exclude the largers example JSON files

